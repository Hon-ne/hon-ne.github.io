[{"title":"Vim Motions","permalink":"http://hon-ne.me/vim-motions.html","link":"http://hon-ne.me/vim-motions.html","date":"2016-07-14T23:00:00-04:00","modified":"2016-07-14T23:41:17-04:00","author":{"name":"Dan Zheng","url":"http://danzheng.me","email":"zheng321@purdue.edu"},"content":"\n","excerpt":"\n","languages":null,"categories":[],"tags":[]},{"title":"Vim Tips","permalink":"http://hon-ne.me/vim.html","link":"http://hon-ne.me/vim.html","date":"2016-07-14T13:02:00-04:00","modified":"2016-07-15T00:48:56-04:00","author":{"name":"Dan Zheng","url":"http://danzheng.me","email":"zheng321@purdue.edu"},"content":"Vim is my favorite editor. I‚Äôve been using it for a year.\n\nHere are some tips and tricks in Vim I‚Äôve learned over time.\n\nThis post only scratches the surface of Vim: I don‚Äôt talk about motions, marks, macros, or advanced techniques. If you‚Äôve mastered these basics and are interested in learning more, check out this awesome answer from stackoverflow.\n\nBasics\n\nHere are some basic Vim commands.\n\nSaving/Exiting\n\n\n  \n    \n      Command\n      Effect\n    \n  \n  \n    \n      :w\n      write (save) the file\n    \n    \n      :wq or :x or ZZ\n      write (save) and quit\n    \n    \n      :q\n      quit, fails if there are unsaved changes\n    \n    \n      :q! or ZQ\n      quit and discard unsaved changes\n    \n  \n\n\nMovement\n\n\n  \n    \n      Command\n      Effect\n    \n  \n  \n    \n      h\n      move cursor left\n    \n    \n      j\n      move cursor down\n    \n    \n      k\n      move cursor up\n    \n    \n      l\n      move cursor right\n    \n    \n      w\n      move to next word\n    \n    \n      b\n      move to previous word\n    \n    \n      0\n      jump to beginning of line\n    \n    \n      $\n      jump to end of line\n    \n    \n      gg\n      go to first line of file\n    \n    \n      G\n      go to last line of document\n    \n    \n      Ctrl + u\n      move up one-half screen\n    \n    \n      Ctrl + d\n      move up one-half screen\n    \n    \n      %\n      while on parentheses/braces: jump to matching parenthesis or brace\n    \n  \n\n\nInsert mode: inserting text\n\n\n  \n    \n      Command\n      Effect\n    \n  \n  \n    \n      i\n      insert before cursor\n    \n    \n      I\n      insert at beginning of line\n    \n    \n      a\n      insert (append) after cursor\n    \n    \n      A\n      insert (append) at end of line\n    \n    \n      o\n      open a new line below current line\n    \n    \n      O\n      open a new line above current line\n    \n    \n      Esc\n      exit insert mode\n    \n  \n\n\nEditing\n\n\n  \n    \n      Command\n      Effect\n    \n  \n  \n    \n      r\n      replace character\n    \n    \n      J\n      join next line with current line\n    \n    \n      s\n      delete character and enter insert mode\n    \n    \n      S or cc\n      delete line and enter insert mode\n    \n    \n      u\n      undo\n    \n    \n      Ctrl + r\n      redo\n    \n  \n\n\nCut and paste\n\n\n  \n    \n      Command\n      Effect\n    \n  \n  \n    \n      yy\n      yank (copy) a line\n    \n    \n      y$\n      yank (copy) to end of line\n    \n    \n      x\n      delete (cut) character\n    \n    \n      dd\n      delete (cut) a line\n    \n    \n      d$\n      delete (cut) to end of line\n    \n    \n      p\n      put (paste) after cursor\n    \n    \n      P\n      put (paste) before cursor\n    \n  \n\n\nVisual mode: marking text\n\n\n  \n    \n      Command\n      Effect\n    \n  \n  \n    \n      v\n      start visual mode (mark text)\n    \n    \n      V\n      start visual line mode\n    \n    \n      vab\n      mark a block with ()\n    \n    \n      vaB\n      mark a block with {}\n    \n    \n      vib\n      mark an inner block with ()\n    \n    \n      viB\n      mark an inner block with {}\n    \n    \n      v-mode: y\n      yank (copy) marked text\n    \n    \n      v-mode: d\n      delete marked text\n    \n    \n      v-mode: ~\n      switch case of marked text\n    \n    \n      Esc\n      exit visual mode\n    \n  \n\n\nSearch and replace\n\n\n  \n    \n      Command\n      Effect\n    \n  \n  \n    \n      /pattern\n      search for pattern\n    \n    \n      n\n      repeat search\n    \n    \n      N\n      repeat search in opposite direction\n    \n    \n      :%s/old/new/g\n      replace all old with new in file\n    \n    \n      :%s/old/new/gc\n      replace all old with new in file with confirmation\n    \n    \n      :noh\n      remove highlighting of search matches\n    \n  \n\n\nCool stuff\n\nHere are some more advanced tips and tricks.\n\n\n  \n    \n      Command\n      Effect\n    \n  \n  \n    \n      .\n      repeat previous command\n    \n    \n      q:\n      view vim command history\n    \n    \n      :! &lt;command&gt;\n      perform external command\n    \n    \n      :! ls\n      perform ls command\n    \n    \n      :r! &lt;command&gt;\n      perform external command and read output into file\n    \n    \n      :r! pbpaste\n      (for Mac) paste system clipboard into file\n    \n    \n      gg=G\n      automatically indent all lines in file\n    \n    \n      gv\n      reselect last visual selection\n    \n    \n      g;\n      move forward in changelist\n    \n    \n      g,\n      move backward in changelist\n    \n    \n      '.\n      go to last edited line\n    \n    \n      `.\n      go to last edited position\n    \n    \n      :%TOhtml\n      save current file as a HTML document\n    \n  \n\n","excerpt":"Vim is my favorite editor. I‚Äôve been using it for a year.\n\n","languages":null,"categories":["code"],"tags":["vim"]},{"title":"HackIllinois","permalink":"http://hon-ne.me/hackillinois.html","link":"http://hon-ne.me/hackillinois.html","date":"2016-02-21T14:41:00-05:00","modified":"2016-02-23T20:47:11-05:00","author":{"name":"Dan Zheng","url":"http://danzheng.me","email":"zheng321@purdue.edu"},"content":"I love hackathons.\n\nSix months ago, I had never heard of a hackathon. Then, I joined Purdue Hackers, a computer science club at Purdue University and learned all about them.\n","excerpt":"I love hackathons.\n\n","languages":null,"categories":["misc"],"tags":["hackathon,","travel"]},{"title":"Stroke Order","permalink":"http://hon-ne.me/stroke-order.html","link":"http://hon-ne.me/stroke-order.html","date":"2016-02-21T11:46:00-05:00","modified":"2016-02-21T15:24:31-05:00","author":{"name":"Dan Zheng","url":"http://danzheng.me","email":"zheng321@purdue.edu"},"content":"Chinese characters, or kanji, are written with a specific stroke order. There are some basic stroke order rules: one is that strokes are generally written from top to bottom and from left to right.\n\nInterestingly, there are some differences in stroke order between Chinese and Japanese. (My personal opinion: Japanese stroke order is weird. Just look below.)\n\n\n\t\n\n\n\n\t\n\n\nWeird, huh.\n","excerpt":"Chinese characters, or kanji, are written with a specific stroke order. There are some basic stroke order rules: one is that strokes are generally written from top to bottom and from left to right.\n\n","languages":null,"categories":["lang"],"tags":[]},{"title":"Whisper of the Heart","permalink":"http://hon-ne.me/whisper-of-the-heart.html","link":"http://hon-ne.me/whisper-of-the-heart.html","date":"2016-02-19T05:11:00-05:00","modified":"2016-02-21T10:06:26-05:00","author":{"name":"Dan Zheng","url":"http://danzheng.me","email":"zheng321@purdue.edu"},"content":"in progress\n","excerpt":"in progress\n","languages":null,"categories":["misc"],"tags":["movie"]},{"title":"Cookies","permalink":"http://hon-ne.me/cookies.html","link":"http://hon-ne.me/cookies.html","date":"2016-02-15T11:41:00-05:00","modified":"2016-02-18T18:29:55-05:00","author":{"name":"Dan Zheng","url":"http://danzheng.me","email":"zheng321@purdue.edu"},"content":"Emmy and I made cookies for Valentine‚Äôs Day! üç™\n\n\n\t\n\n\nI bought a bunch of ingredients, including chocolate chunks, vanilla chips, pine nuts, and trail mix. We discovered ingredients in the dorm kitchen and used some of those, too.\n\n\n\t\n\n\nWe made chocolate chip and oatmeal trail mix cookies. We also experimented and made cookies with interesting ingredient combinations for fun: chocolate and chili powder, butterscotch and vanilla, and even a few with all of our ingredients.\n\n\n\t\n\n\nThe whole process was five hours from start to finish. Our first batch of chocolate chip cookies didn‚Äôt turn out so well: we added too many chocolate chunks, which made the cookies too soft and impossible to pick up without crumbling. The first oatmeal cookies were also too big.\n\nHowever, we learned from our initial mistakes and the remaining batches turned out a little better (with the exception of the third batch of oatmeal cookies, which we left in the oven too long and burned).\n\n\n\t\n\n\nAt about the one-hour mark, both of us started feeling nauseous from the overwhelmingly sweet scent of cookie dough, but we persevered and kept baking cookies until we ran out of dough.\n\n\n\t\n\n\nWe gave away almost all of the cookies. Seeing smiles and hearing praises from friends made it all worthwhile!\n\n\n\nI don‚Äôt know about Emmy, but I think I‚Äôve had enough cookies to satisfy me for a couple months.\n\n(Photos courtesy of my Snapchat friends, you‚Äôre welcome for the cookies)\n","excerpt":"Emmy and I made cookies for Valentine‚Äôs Day! üç™\n\n","languages":null,"categories":["misc"],"tags":["food"]},{"title":"Badminton 101","permalink":"http://hon-ne.me/badminton-101.html","link":"http://hon-ne.me/badminton-101.html","date":"2016-02-13T20:53:00-05:00","modified":"2016-02-21T10:09:03-05:00","author":{"name":"Dan Zheng","url":"http://danzheng.me","email":"zheng321@purdue.edu"},"content":"Badminton is a fun sport enjoyed by people all over the world. The objective is simple: to hit the shuttle with your racket so that it passes over the net and lands inside your opponent‚Äôs half of the court. When this happens, you win a rally and get a point; get enough points and you win the match.\n\nYour opponent has the same goal as you: he or she will try to reach the shuttle and hit it over the net into your half of the court. If your opponent makes a mistake and hits the shuttle into the net or out of bounds, you win the rally. If you make a mistake, your opponent wins the point.\n\n\n\nThere are many types of shots in badminton. The type of shot you can make depends on your position in the court, specifically your distance from the net.\n\n\n  Rear court\n    \n      Clear:\n      Drop:\n    \n  \n  Mid-court\n    \n      Drive:\n      Smash:\n    \n  \n  Net\n    \n      Net shot:\n      Net kill:\n    \n  \n\n\nThere are two simple rules of thumb about making high quality shots:\n\n\n  Overhead forehand is better than overhead backhand.\n    \n      Overhead forehand shots are generally favored over overhead backhand shots. It is easier to generate power with the forehand and it is generally easier to recover from playing a overhead forehand shot because overhead backhand shots require you to turn your body.\n      That‚Äôs why many professional players can be seen playing around-the-head forehand shots, which they use to hit the shuttle when it is on their backhand side using their forehand.\n    \n  \n  Higher/sooner is better than lower/later.\n\n\nin progress\n","excerpt":"Badminton is a fun sport enjoyed by people all over the world. The objective is simple: to hit the shuttle with your racket so that it passes over the net and lands inside your opponent‚Äôs half of the court. When this happens, you win a rally and get a point; get enough points and you win the match.\n\n","languages":null,"categories":["misc"],"tags":["badminton"]},{"title":"Loan Words","permalink":"http://hon-ne.me/loan-words.html","link":"http://hon-ne.me/loan-words.html","date":"2016-02-13T20:49:00-05:00","modified":"2016-02-18T13:41:44-05:00","author":{"name":"Dan Zheng","url":"http://danzheng.me","email":"zheng321@purdue.edu"},"content":"in progress\n","excerpt":"in progress\n","languages":null,"categories":["lang"],"tags":[]},{"title":"LEMP Stack on DigitalOcean","permalink":"http://hon-ne.me/lemp-stack-on-digitalocean.html","link":"http://hon-ne.me/lemp-stack-on-digitalocean.html","date":"2016-02-13T20:48:00-05:00","modified":"2016-02-18T13:41:44-05:00","author":{"name":"Dan Zheng","url":"http://danzheng.me","email":"zheng321@purdue.edu"},"content":"This post is a tutorial for setting up the LEMP web development stack on DigitalOcean.\n\nin progress\n","excerpt":"This post is a tutorial for setting up the LEMP web development stack on DigitalOcean.\n\n","languages":null,"categories":["code"],"tags":[]},{"title":"First post!","permalink":"http://hon-ne.me/first-post.html","link":"http://hon-ne.me/first-post.html","date":"2016-02-13T16:53:00-05:00","modified":"2016-02-17T11:56:11-05:00","author":{"name":"Dan Zheng","url":"http://danzheng.me","email":"zheng321@purdue.edu"},"content":"Welcome!\n\nThis blog is made with AMSF, a Jekyll framework.\n\nIf you‚Äôre interested in creating a blog like this, visit the AMSF GitHub page.\n","excerpt":"Welcome!\n\n","languages":null,"categories":[],"tags":[]}]